{"version":3,"sources":["images/samuria.jpg","images/yin_half.png","images/yang_half.png","images/absbg.jpg","logo.svg","testfiles/components.js","testfiles/preview.js","testfiles/Nnoxo.js","testfiles/Index.js","testfiles/header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createGlobalStyle","props","Color","Containered","styled","div","InnerDiv","display","img2","transition","opac","img1","BgFade","openVis","TestDiv","width","height","isColor","img","isOpen","left","top","TestDiv1","isOpen1","left1","MenuIcon","FaTimes","CgMenuRightAlt","MenuButton","button","right","bottom","TextDiv","textColor","TextSmallDiv","TimerDiv","img3","InputNum","input","Button","CountDiv","Count","Text","Preview","useState","count","setCount","mins","setMins","startCounter","setStartCounter","text","setText","useEffect","interval","setInterval","clearInterval","textInput","React","createRef","ref","type","className","placeholder","onClick","current","value","Nnoxo","ESCAPE_KEYS","W","A","S","D","setIsOpen","tagName","setTagName","setIsOpen1","setColor","setDisplay","setTextCol","setTran","setOpac","setVis","setWidth","setHeight","setLeft","setLeft1","setTop","changeVis","App","useEventListener","key","includes","String","console","log","icon90","icon270","icon0","icon180","Index","Nav","to","Header","Component","Main","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bb5c1de4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/samuria.92e56650.jpg\";","module.exports = __webpack_public_path__ + \"static/media/yin_half.6e75d46d.png\";","module.exports = __webpack_public_path__ + \"static/media/yang_half.d481eb4d.png\";","module.exports = __webpack_public_path__ + \"static/media/absbg.4e11f03d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import styled from 'styled-components';\r\nimport {FaTimes} from 'react-icons/fa';\r\nimport {CgMenuRightAlt} from 'react-icons/cg';\r\nimport img from '../images/yang_half.png';\r\nimport img1 from '../images/yin_half.png';\r\nimport img2 from '../images/samuria.jpg';\r\nimport img3 from '../images/absbg.jpg';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    body{\r\n        color: ${props => (props.Color ? 'red' : 'green')};\r\n    }\r\n`;\r\n\r\n\r\n\r\n\r\nexport const Containered = styled.div`\r\n    padding: 2%;\r\n    background: #111;\r\n    positon:absolute;\r\n    bottom:0;\r\n    right:0;\r\n    top: 0;\r\n    left: 0;\r\n    min-height: 100%;\r\n    height:100vh;\r\n    max-height: 100%;\r\n    width:100%;\r\n`;\r\n\r\nexport const InnerDiv = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 5%;\r\n    margin: 0;\r\n    //border: 1px solid #BD1F2D;\r\n    background: #111;\r\n    //background-image: ${({display}) => ('url('+display+')')};\r\n    background-image: url(${img2});\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: cover;\r\n    //transition: ${({transition}) => (transition)};\r\n    //opacity: ${({opac}) => (opac)};\r\n\r\n    /*&:hover {\r\n        background-image: url(${img1})\r\n    }*/\r\n  \r\n\r\n`;\r\n\r\nexport const BgFade = styled.div`\r\n    padding: 0;\r\n    margin: 0;\r\n    //border: 3px solid red;\r\n    background: #BD1F2D;\r\n    position: absolute;\r\n    width:100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    visibility: ${({openVis}) => (openVis)};\r\n    transition: ${({transition}) => (transition)};\r\n    opacity: ${({opac}) => (opac)};\r\n`;\r\n\r\n\r\nexport const TestDiv = styled.div`\r\n    width: ${({width}) => (width)};\r\n    height: ${({height}) => (height)};\r\n    //background: ${({ isColor }) => (isColor ? 'green' : 'red')}; \r\n    //background: ${({isColor}) => (isColor)};\r\n    background-image: url(${img});\r\n    //display:flex;\r\n    color: red;\r\n    transform: ${({ isOpen }) => ( 'rotate('+isOpen+'deg)')};\r\n    -webkit-transition: 1s ease-in-out;\r\n    -moz-transition: 1s ease-in-out;\r\n    -o-transition: 1s ease-in-out;\r\n    transition: 1s ease-in-out;\r\n    position: absolute;\r\n    z-index: 999;\r\n    left: ${({left}) => (left)};\r\n    right: 0;\r\n    top: ${({top}) => (top)};\r\n    bottom: 0;\r\n    margin: auto;\r\n    //border:1px solid red;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: contain;\r\n    text-align: center;\r\n    //visibility: ${({openVis}) => (openVis)};\r\n    //transition: ${({transition}) => (transition)};\r\n    //opacity: ${({opac}) => (opac)};\r\n\r\n\r\n`;\r\n\r\nexport const TestDiv1 = styled.div`\r\n    width: ${({width}) => (width)};\r\n    height: ${({height}) => (height)};\r\n    //background: ${({ isColor }) => (isColor ? 'green' : 'red')}; \r\n    //background: ${({isColor}) => (isColor)};\r\n    background-image: url(${img1});\r\n    //display:flex;\r\n    color: red;\r\n    transform: ${({ isOpen1 }) => ( 'rotate('+isOpen1+'deg)')};\r\n    -webkit-transition: 1s ease-in-out;\r\n    -moz-transition: 1s ease-in-out;\r\n    -o-transition: 1s ease-in-out;\r\n    transition: 1s ease-in-out;\r\n    position: absolute;\r\n    z-index: 999;\r\n    left: ${({left1}) => (left1)};\r\n    right: 0;\r\n    top: ${({top}) => (top)};\r\n    //top: -73%;\r\n    bottom: 0;\r\n    margin: auto;\r\n    //border:1px solid red;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: contain;\r\n    text-align: center;\r\n    //visibility: ${({openVis}) => (openVis)};\r\n    //transition: ${({transition}) => (transition)};\r\n    //opacity: ${({opac}) => (opac)};\r\n`;\r\n\r\n/*export const CloseIcon = styled(FaTimes)`\r\n    color: #fff;\r\n`;*/\r\n\r\nexport const CloseIcon = styled(FaTimes)`\r\n    color: #fff;\r\n`;\r\n\r\nexport const MenuIcon = styled(CgMenuRightAlt)`\r\n    color: #111;\r\n`;\r\n\r\nexport const Icon = styled.button`\r\n    position: absolute;\r\n    top: ${props => (props.top)};\r\n    right: ${props => (props.right)};\r\n    bottom: ${props => (props.bottom)};\r\n    left: ${props => (props.left)};\r\n    width: ${props => (props.width)};\r\n    height: ${props => (props.height)};\r\n    background: transparent;\r\n    font-size: 1rem;\r\n    cursor: pointer;\r\n    outline: none;\r\n    padding: 1%;\r\n    border: 1px solid #696969;\r\n    visibility: ${({openVis}) => (openVis)};\r\n`;\r\n\r\nexport const MenuButton = styled.button`\r\n    position: relative;\r\n    top: ${props => (props.top)};\r\n    right: ${props => (props.right)};\r\n    bottom: ${props => (props.bottom)};\r\n    left: ${props => (props.left)};\r\n    width: ${props => (props.width)};\r\n    height: ${props => (props.height)};\r\n    background: transparent;\r\n    border: 0px solid #696969;\r\n    padding: 1%;\r\n    color: white;\r\n    z-index: 1;\r\n    font-size: 2rem;\r\n\r\n    @media screen and (max-width: 1000px){\r\n        top: 85%;\r\n        left: 45%;\r\n    }\r\n\r\n    @media screen and (max-width: 769px){\r\n        top: 85%;\r\n        left: 44%;\r\n    }\r\n\r\n \r\n`;\r\n\r\nexport const TextDiv = styled.div`\r\n    position: relative;\r\n    top: ${props => (props.top)};\r\n    right: ${props => (props.right)};\r\n    bottom: ${props => (props.bottom)};\r\n    left: ${props => (props.left)};\r\n    width: ${props => (props.width)};\r\n    height: ${props => (props.height)};\r\n    background: transparent;\r\n    padding: 1%;\r\n    border: 0px solid #696969;\r\n    color: ${({textColor}) => (textColor)};\r\n    z-index: 999;\r\n    font-size: 30px;\r\n    visibility: ${({display}) => (display)};\r\n    -webkit-transition: 3s ease-in-out;\r\n    -moz-transition: 3s ease-in-out;\r\n    -o-transition: 3s ease-in-out;\r\n    transition: 3s ease-in-out;\r\n\r\n    @media screen and (max-width: 1000px){\r\n        top:0%;\r\n    }\r\n\r\n    @media screen and (max-width: 769px){\r\n        top:0%;\r\n        left: -10%;\r\n    }\r\n\r\n    @media screen and (max-width: 480px){\r\n        top:0%;\r\n        left: -5%;\r\n    }\r\n`;\r\n\r\nexport const TextSmallDiv = styled.div`\r\n    position: absolute;\r\n    top: ${props => (props.top)};\r\n    right: ${props => (props.right)};\r\n    bottom: ${props => (props.bottom)};\r\n    left: ${props => (props.left)};\r\n    width: ${props => (props.width)};\r\n    height: ${props => (props.height)};\r\n    background: transparent;\r\n    padding: 1%;\r\n    border: 0px solid #696969;\r\n    color: ${({textColor}) => (textColor)};\r\n    z-index: 999;\r\n    font-size: 20px;\r\n    visibility: ${({openVis}) => (openVis)};\r\n    opacity: ${({opac}) => (opac)};\r\n    -webkit-transition: 3s ease-in-out;\r\n    -moz-transition: 3s ease-in-out;\r\n    -o-transition: 3s ease-in-out;\r\n    transition: 3s ease-in-out;\r\n`;\r\n\r\nexport const TimerDiv = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 5%;\r\n    margin: 0;\r\n\r\n    //border: 1px solid #F5F5F5;\r\n    //background: #F5F5F5;\r\n    background-image: url(${img3});\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: cover;\r\n\r\n    @media screen and (max-width: 1000px){\r\n        padding-top:20%;\r\n    }\r\n\r\n    @media screen and (max-width: 769px){\r\n        padding-top:30%;\r\n    }\r\n\r\n    @media screen and (max-width: 480px){\r\n        padding-top:50%;\r\n    }\r\n\r\n    \r\n\r\n   \r\n\r\n`;\r\n\r\nexport const InputNum = styled.input`\r\n    width: 50%;\r\n    padding: 1%;    \r\n    margin: 1%;\r\n    border-radius: 5px;\r\n    border: 1px solid #F8F8FF;\r\n    background: #F8F8FF;\r\n    box-shadow: 5px 5px 5px #D3D3D3;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    width: 50%;\r\n    padding: 1%;    \r\n    margin: 0;\r\n    border-radius: 5px;\r\n    border: 1px solid #7B68EE;\r\n    background: #7B68EE;\r\n    box-shadow: 5px 5px 5px #D3D3D3;\r\n    color: white\r\n`;\r\n\r\nexport const CountDiv = styled.div`\r\n    width: 100%;\r\n    padding: 3%;    \r\n    margin: 1%;\r\n    border-radius: 5px;\r\n    border: 1px solid #7B68EE;\r\n    background: #7B68EE;\r\n    box-shadow: 5px 5px 5px #D3D3D3;\r\n    color: white\r\n`;\r\n\r\nexport const Count = styled.div`\r\n    width: 100%;\r\n    padding: 2%;   \r\n    font-size: 5rem; \r\n    \r\n`;\r\n\r\nexport const Text = styled.div`\r\n    width: 100%;\r\n    padding: 1%;   \r\n    font-size: 5rem; \r\n    \r\n`;","import ReactDOM from 'react-dom'\r\nimport React, { useState, useEffect } from 'react';\r\nimport {Containered, TimerDiv, InputNum, Button, CountDiv, Count, Text} from './components';\r\n\r\nlet num = 0;\r\nfunction Preview(){\r\n    let [count, setCount] = useState(0);\r\n    let [mins, setMins] = useState(0);\r\n    //const [secs, setSecs] = useState(0);\r\n    let [startCounter, setStartCounter] = useState(false);\r\n    let [text, setText] = useState('');\r\n\r\n    const calTime = () => {\r\n      if(count >= 60){\r\n        setCount(count - 60);\r\n        setMins(mins + 1);\r\n      }\r\n    }\r\n    \r\n    const counter = () => {\r\n        \r\n        \r\n\r\n        /*if(count < 60){\r\n          setStartCounter(startCounter);\r\n          console.log(startCounter);\r\n        }*/\r\n        //console.log(startCounter)\r\n\r\n        if(startCounter){\r\n          if(count > 0){\r\n            setCount(count-1);\r\n          }\r\n          \r\n          if(count <= 0 ){\r\n            if(mins <= 0  && count <= 0){\r\n              //console.log('time up');\r\n              setText(text = \"TIME'S UP\");\r\n              setStartCounter(!startCounter);              \r\n            }\r\n            \r\n            if(mins > 0){\r\n              setMins(mins - 1);\r\n              setCount(count + 59);\r\n            }            \r\n          }\r\n\r\n          \r\n        }\r\n\r\n        //console.log(secs);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n      const interval = setInterval(() => {\r\n             counter();\r\n      }, 1000);\r\n      calTime();     \r\n      return () => clearInterval(interval);       \r\n    }, [count, mins, startCounter]);\r\n\r\n    let textInput = React.createRef();\r\n    const handleSubmit = () => {\r\n      setMins(mins = 0);\r\n      setText(text = \"\");\r\n      setCount(count = textInput.current.value);\r\n      setStartCounter(startCounter = true);\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <Containered> \r\n        <TimerDiv>\r\n          <InputNum ref ={textInput} type=\"number\" className=\"countVal\" placeholder=\"SECONDS\" />\r\n          <Button onClick={handleSubmit} >SUBMIT</Button>\r\n          <CountDiv>\r\n            <Count>{mins} : {count}</Count>\r\n            <Text>{text}</Text>\r\n          </CountDiv>\r\n             \r\n        </TimerDiv>    \r\n            \r\n      </Containered>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n/*class Preview extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { elem: document.getElementById(\"myAnimation\")};\r\n        this.calAdd = this.calAdd.bind(this);  \r\n        this.state = { count: 0, rain : 1};\r\n        \r\n    }\r\n    \r\n\r\n    calAdd(){\r\n            this.setState(({count: this.state.count + 1})); \r\n            /*for(let i = 0; i < this.state.count; i++){\r\n                console.log('hey');\r\n            }                \r\n    }*/\r\n\r\n    /*moveanim(){\r\n        let pos = 0;\r\n        let id = setInterval(frame, 10);\r\n        function frame() {\r\n            if (pos == 350) {\r\n            clearInterval(id);\r\n            } else {\r\n            pos++; \r\n            this.state.elem.style.top = pos + 'px'; \r\n            //elem.style.left = pos + 'px'; \r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.TimerID = setInterval(() => this.calAdd(), 1000);\r\n    };\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.timerID);\r\n    }\r\n    \r\n    render(){\r\n        return <div>\r\n            <p>{this.state.count}</p>\r\n              \r\n            </div>;\r\n    }\r\n    \r\n};*/\r\n\r\n//setInterval(Preview, 1000);\r\n//<button onClick={this.calAdd}>Click Me </button>\r\n\r\n\r\n/*function calSub(){\r\n  return num--;\r\n}\r\n\r\nfunction eventchecker(props){\r\n    if(props.action == \"add\"){\r\n      calAdd();\r\n    }else{\r\n      calSub();\r\n    }\r\n}*/\r\n\r\nexport default Preview","import React from 'react';\r\nimport {TestDiv, Icon, CloseIcon, InnerDiv, Containered, TextDiv, TestDiv1, MenuIcon, MenuButton, BgFade, TextSmallDiv} from './components'; \r\nimport { useState, useEffect } from 'react'\r\nimport img2 from '../images/samuria.jpg';\r\nimport useEventListener from '@use-it/event-listener'\r\n//import {Container, Row, Col} from 'react-bootstrap';\r\n\r\n\r\nconst Nnoxo = () => {\r\n\r\n        \r\nconst ESCAPE_KEYS = ['27', 'Escape'];\r\nconst W = ['87', 'w'];\r\nconst A = ['65', 'a'];\r\nconst S = ['83', 's'];\r\nconst D = ['68', 'd'];\r\n\r\n\r\n\r\n    let [isOpen, setIsOpen] = useState(90);\r\n    let [tagName, setTagName] = useState('ENTER D WU');\r\n    let [isOpen1, setIsOpen1] = useState(180);\r\n    let [isColor, setColor] = useState('red');\r\n    let [display, setDisplay] = useState('');\r\n    let [textColor, setTextCol] = useState('white');\r\n    let [transition, setTran] = useState('opacity 2s linear');\r\n    let [opac, setOpac] = useState('1');\r\n    let [openVis, setVis] = useState('visible');\r\n    let [width, setWidth] = useState('350px');\r\n    let [height, setHeight] = useState('400px');\r\n    let [left, setLeft] = useState('-5%');\r\n    let [left1, setLeft1] = useState('5%');\r\n    let [top, setTop] = useState('0');  \r\n    const icon0 = () => { setIsOpen1(isOpen1 = isOpen1 + 90); setColor(isColor = 'red'); }\r\n    const icon90 = () => { setIsOpen(isOpen + 90); setColor(isColor = 'green');}\r\n    const icon180 = () => { setIsOpen1(isOpen1 = isOpen1 - 90); setColor(isColor = 'purple'); }\r\n    const icon270 = () => { setIsOpen(isOpen - 90); setColor(isColor = 'black'); }\r\n    const  changeVis = () => { \r\n                if((isOpen1 === 0 || isOpen1 % 360 === 0) && (isOpen === 0 || isOpen % 360 === 0) ){ \r\n                        \r\n                        setOpac(opac = '0');\r\n                        //setTimeout(() => {  console.log(\"World!\"); }, 10000);\r\n                        setVis(openVis = 'hidden');\r\n                        setWidth(width = '50px');\r\n                        setHeight(height = '100px')\r\n                        setTagName(tagName = 'NNOXO');                       \r\n                        \r\n                        setDisplay(display = img2);\r\n                        setLeft(left = '78%');\r\n                        setLeft1(left1 = '80%');\r\n                        setTop(top = '-73%');\r\n                        setTran(transition = 'visibility 0s 2s, opacity 2s linear');\r\n                        //setOpac(opac = '0');\r\n                        \r\n                        setTextCol(textColor = '#111');\r\n                }else {\r\n                        setOpac(opac = '1');\r\n                        setVis(openVis = 'visible');\r\n                        setWidth(width = '350px');\r\n                        setHeight(height = '400px')\r\n                        setTagName(tagName = 'ENTER D WU');                       \r\n                        \r\n                        setDisplay(display = img2);\r\n                        setLeft(left = '-5%');\r\n                        setLeft1(left1 = '5%');\r\n                        setTop(top = '0');\r\n                        setTran(transition = 'opacity 2s linear');\r\n                        //setOpac(opac = '0');\r\n                        \r\n                        setTextCol(textColor = '#fff');\r\n                };\r\n                \r\n        }\r\n\r\n        const App = () => {\r\n                function handler({ key }) {\r\n                      if (ESCAPE_KEYS.includes(String(key))) {\r\n                      console.log('Escape key pressed!');\r\n                      }\r\n                      if (W.includes(String(key))) {\r\n                        setIsOpen1(isOpen1 = isOpen1 + 90);\r\n                        console.log('W key pressed!');\r\n                      }\r\n                      if (A.includes(String(key))) {\r\n                        setIsOpen(isOpen - 90);\r\n                        console.log('W key pressed!');\r\n                      }\r\n                      if (S.includes(String(key))) {\r\n                        setIsOpen1(isOpen1 = isOpen1 - 90);\r\n                        console.log('W key pressed!');\r\n                      }\r\n                      if (D.includes(String(key))) {\r\n                        setIsOpen(isOpen + 90);\r\n                        console.log('W key pressed!');\r\n                      }\r\n                }\r\n              \r\n                useEventListener('keydown', handler);\r\n              \r\n                return null;\r\n              }\r\n\r\n\r\n    //const colorRed = () => {if(isOpen > 0) setColor(!isColor);}\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n               changeVis();\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n      }, [isOpen1, isOpen]);\r\n\r\n    return (\r\n        <>\r\n            <Containered>\r\n                        <TestDiv isOpen={isOpen} width={width} height={height} left={left} top={top} isColor={isColor} openVis={openVis} icon90 = {icon90}  icon270 = {icon270} ></TestDiv>\r\n                        <TestDiv1 isOpen1={isOpen1} width={width} height={height} left1={left1} top={top} isColor={isColor} openVis={openVis} icon0={icon0}  icon180 = {icon180}  ></TestDiv1> \r\n                        <BgFade opac={opac} changeVis={changeVis} transition={transition} openVis={openVis} ></BgFade>\r\n                        <InnerDiv display={display} opac={opac} changeVis={changeVis} transition={transition} >                                \r\n                                <TextDiv left='-18%' top= '-10%' width='50%' textColor={textColor}>{tagName}</TextDiv>\r\n                                <TextSmallDiv left='0%' top= '82%' width='100%' textColor={textColor} openVis={openVis} opac={opac}> A & D TO CONTROL YIN</TextSmallDiv>\r\n                                <TextSmallDiv left='0%' top= '86%' width='100%' textColor={textColor} openVis={openVis} opac={opac}> W & S TO CONTROL YANG</TextSmallDiv>                                \r\n                                <MenuButton left='50%'  width = '5%' top='80%'>< MenuIcon/></MenuButton>\r\n                        </InnerDiv>\r\n                <App />               \r\n            </Containered>\r\n            \r\n            \r\n\r\n        </>           \r\n    \r\n    );\r\n};\r\n\r\nexport default Nnoxo;\r\n\r\n/*<InnerDiv>\r\n                        <TestDiv isOpen={isOpen} isColor={isColor} width={width} height={height} icon0={icon0} icon90 = {icon90}  icon180 = {icon180} icon270 = {icon270} ></TestDiv> \r\n                        <Icon onClick={icon0}>\r\n                                <CloseIcon />\r\n                        </Icon>\r\n                        <Icon onClick={icon90}>\r\n                                <CloseIcon />\r\n                        </Icon>\r\n                        <Icon onClick={icon180}>\r\n                                <CloseIcon />\r\n                        </Icon>\r\n                        <Icon onClick={icon270}>\r\n                                <CloseIcon />\r\n                        </Icon>\r\n                    </InnerDiv>\r\n                    \r\n                    \r\n                    \r\n                                    <Icon onClick={icon0} openVis={openVis} top = '0px' left='48.5%' height = '120px'>\r\n                        <CloseIcon />\r\n                </Icon>\r\n                <Icon onClick={icon90} openVis={openVis} right='0' bottom='50%' width = '200px'>\r\n                        <CloseIcon />\r\n                </Icon>\r\n                <Icon onClick={icon180} openVis={openVis} bottom='1px' height = '120px' left='48.5%'>\r\n                        <CloseIcon />\r\n                </Icon>\r\n                <Icon onClick={icon270} openVis={openVis} left='0' bottom='50%' width = '200px'>\r\n                        <CloseIcon />\r\n                </Icon>\r\n                    \r\n                    \r\n                    */","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './body.css';\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nconst Index = () => {\r\n    return (\r\n        <>\r\n            \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import React, {Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './body.css';\r\n\r\n\r\n\r\nconst Nav = () => {\r\n  return (\r\n      <ul className=\"nav abs text-monospace\">\r\n          <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/nnoxo\">Nnoxo</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/preview\">Timer</Link>\r\n          </li>\r\n  </ul>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nclass Header extends Component {\r\n    render() {\r\n\r\n        return (\r\n                <Nav />\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Preview from './testfiles/preview';\nimport Nnoxo from './testfiles/Nnoxo';\nimport Index from './testfiles/Index';\nimport {Switch, Route} from 'react-router-dom';\nimport Header from './testfiles/header';\n\nconst Main = () => {\n\treturn (\n\n\t\t      <Switch>\n            <Route exact path=\"/\"><Index /></Route>\n            <Route path=\"/nnoxo\" ><Nnoxo /></Route>\n            <Route path=\"/preview\" ><Preview /></Route>\n          </Switch> \n\t);\n}\n\n\nfunction App() {\n  return (\n    <div className='App'>\n        <Main />\n        <Header />       \n                \n    </div>\n  );\n}\n\nexport default App;\n\n\n//<div id='myAnimation'></div>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}